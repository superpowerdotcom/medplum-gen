/*
Medplum - OpenAPI 3.0

Medplum OpenAPI 3.0 specification.  Learn more about Medplum at [https://www.medplum.com](https://www.medplum.com).

API version: 1.0.5
Contact: hello@medplum.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package medplum

import (
	"encoding/json"
)

// checks if the ExampleScenarioOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleScenarioOperation{}

// ExampleScenarioOperation Example of workflow instance.
type ExampleScenarioOperation struct {
	// A sequence of Unicode characters
	Id *string `json:"id,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
	Extension []Extension `json:"extension,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
	ModifierExtension []Extension `json:"modifierExtension,omitempty"`
	// A sequence of Unicode characters
	Number *string `json:"number,omitempty"`
	// A sequence of Unicode characters
	Type *string `json:"type,omitempty"`
	// A sequence of Unicode characters
	Name *string `json:"name,omitempty"`
	// A sequence of Unicode characters
	Initiator *string `json:"initiator,omitempty"`
	// A sequence of Unicode characters
	Receiver *string `json:"receiver,omitempty"`
	// A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
	Description *string `json:"description,omitempty"`
	// Value of \"true\" or \"false\"
	InitiatorActive *bool `json:"initiatorActive,omitempty"`
	// Value of \"true\" or \"false\"
	ReceiverActive *bool `json:"receiverActive,omitempty"`
	// Each resource instance used by the initiator.
	Request *ExampleScenarioContainedInstance `json:"request,omitempty"`
	// Each resource instance used by the responder.
	Response *ExampleScenarioContainedInstance `json:"response,omitempty"`
}

// NewExampleScenarioOperation instantiates a new ExampleScenarioOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleScenarioOperation() *ExampleScenarioOperation {
	this := ExampleScenarioOperation{}
	return &this
}

// NewExampleScenarioOperationWithDefaults instantiates a new ExampleScenarioOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleScenarioOperationWithDefaults() *ExampleScenarioOperation {
	this := ExampleScenarioOperation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExampleScenarioOperation) SetId(v string) {
	o.Id = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetExtension() []Extension {
	if o == nil || IsNil(o.Extension) {
		var ret []Extension
		return ret
	}
	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given []Extension and assigns it to the Extension field.
func (o *ExampleScenarioOperation) SetExtension(v []Extension) {
	o.Extension = v
}

// GetModifierExtension returns the ModifierExtension field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetModifierExtension() []Extension {
	if o == nil || IsNil(o.ModifierExtension) {
		var ret []Extension
		return ret
	}
	return o.ModifierExtension
}

// GetModifierExtensionOk returns a tuple with the ModifierExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetModifierExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.ModifierExtension) {
		return nil, false
	}
	return o.ModifierExtension, true
}

// HasModifierExtension returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasModifierExtension() bool {
	if o != nil && !IsNil(o.ModifierExtension) {
		return true
	}

	return false
}

// SetModifierExtension gets a reference to the given []Extension and assigns it to the ModifierExtension field.
func (o *ExampleScenarioOperation) SetModifierExtension(v []Extension) {
	o.ModifierExtension = v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *ExampleScenarioOperation) SetNumber(v string) {
	o.Number = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExampleScenarioOperation) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExampleScenarioOperation) SetName(v string) {
	o.Name = &v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetInitiator() string {
	if o == nil || IsNil(o.Initiator) {
		var ret string
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetInitiatorOk() (*string, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given string and assigns it to the Initiator field.
func (o *ExampleScenarioOperation) SetInitiator(v string) {
	o.Initiator = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetReceiver() string {
	if o == nil || IsNil(o.Receiver) {
		var ret string
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given string and assigns it to the Receiver field.
func (o *ExampleScenarioOperation) SetReceiver(v string) {
	o.Receiver = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExampleScenarioOperation) SetDescription(v string) {
	o.Description = &v
}

// GetInitiatorActive returns the InitiatorActive field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetInitiatorActive() bool {
	if o == nil || IsNil(o.InitiatorActive) {
		var ret bool
		return ret
	}
	return *o.InitiatorActive
}

// GetInitiatorActiveOk returns a tuple with the InitiatorActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetInitiatorActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.InitiatorActive) {
		return nil, false
	}
	return o.InitiatorActive, true
}

// HasInitiatorActive returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasInitiatorActive() bool {
	if o != nil && !IsNil(o.InitiatorActive) {
		return true
	}

	return false
}

// SetInitiatorActive gets a reference to the given bool and assigns it to the InitiatorActive field.
func (o *ExampleScenarioOperation) SetInitiatorActive(v bool) {
	o.InitiatorActive = &v
}

// GetReceiverActive returns the ReceiverActive field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetReceiverActive() bool {
	if o == nil || IsNil(o.ReceiverActive) {
		var ret bool
		return ret
	}
	return *o.ReceiverActive
}

// GetReceiverActiveOk returns a tuple with the ReceiverActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetReceiverActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ReceiverActive) {
		return nil, false
	}
	return o.ReceiverActive, true
}

// HasReceiverActive returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasReceiverActive() bool {
	if o != nil && !IsNil(o.ReceiverActive) {
		return true
	}

	return false
}

// SetReceiverActive gets a reference to the given bool and assigns it to the ReceiverActive field.
func (o *ExampleScenarioOperation) SetReceiverActive(v bool) {
	o.ReceiverActive = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetRequest() ExampleScenarioContainedInstance {
	if o == nil || IsNil(o.Request) {
		var ret ExampleScenarioContainedInstance
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetRequestOk() (*ExampleScenarioContainedInstance, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given ExampleScenarioContainedInstance and assigns it to the Request field.
func (o *ExampleScenarioOperation) SetRequest(v ExampleScenarioContainedInstance) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *ExampleScenarioOperation) GetResponse() ExampleScenarioContainedInstance {
	if o == nil || IsNil(o.Response) {
		var ret ExampleScenarioContainedInstance
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioOperation) GetResponseOk() (*ExampleScenarioContainedInstance, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *ExampleScenarioOperation) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given ExampleScenarioContainedInstance and assigns it to the Response field.
func (o *ExampleScenarioOperation) SetResponse(v ExampleScenarioContainedInstance) {
	o.Response = &v
}

func (o ExampleScenarioOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleScenarioOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.ModifierExtension) {
		toSerialize["modifierExtension"] = o.ModifierExtension
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InitiatorActive) {
		toSerialize["initiatorActive"] = o.InitiatorActive
	}
	if !IsNil(o.ReceiverActive) {
		toSerialize["receiverActive"] = o.ReceiverActive
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	return toSerialize, nil
}

type NullableExampleScenarioOperation struct {
	value *ExampleScenarioOperation
	isSet bool
}

func (v NullableExampleScenarioOperation) Get() *ExampleScenarioOperation {
	return v.value
}

func (v *NullableExampleScenarioOperation) Set(val *ExampleScenarioOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleScenarioOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleScenarioOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleScenarioOperation(val *ExampleScenarioOperation) *NullableExampleScenarioOperation {
	return &NullableExampleScenarioOperation{value: val, isSet: true}
}

func (v NullableExampleScenarioOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleScenarioOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


