/*
Medplum - OpenAPI 3.0

Medplum OpenAPI 3.0 specification.  Learn more about Medplum at [https://www.medplum.com](https://www.medplum.com).

API version: 1.0.5
Contact: hello@medplum.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package medplum

import (
	"encoding/json"
)

// checks if the ExampleScenarioInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleScenarioInstance{}

// ExampleScenarioInstance Example of workflow instance.
type ExampleScenarioInstance struct {
	// A sequence of Unicode characters
	Id *string `json:"id,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
	Extension []Extension `json:"extension,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
	ModifierExtension []Extension `json:"modifierExtension,omitempty"`
	// A sequence of Unicode characters
	ResourceId *string `json:"resourceId,omitempty"`
	// A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents
	ResourceType *string `json:"resourceType,omitempty"`
	// A sequence of Unicode characters
	Name *string `json:"name,omitempty"`
	// A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
	Description *string `json:"description,omitempty"`
	// A specific version of the resource.
	Version []ExampleScenarioVersion `json:"version,omitempty"`
	// Resources contained in the instance (e.g. the observations contained in a bundle).
	ContainedInstance []ExampleScenarioContainedInstance `json:"containedInstance,omitempty"`
}

// NewExampleScenarioInstance instantiates a new ExampleScenarioInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleScenarioInstance() *ExampleScenarioInstance {
	this := ExampleScenarioInstance{}
	return &this
}

// NewExampleScenarioInstanceWithDefaults instantiates a new ExampleScenarioInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleScenarioInstanceWithDefaults() *ExampleScenarioInstance {
	this := ExampleScenarioInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExampleScenarioInstance) SetId(v string) {
	o.Id = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetExtension() []Extension {
	if o == nil || IsNil(o.Extension) {
		var ret []Extension
		return ret
	}
	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given []Extension and assigns it to the Extension field.
func (o *ExampleScenarioInstance) SetExtension(v []Extension) {
	o.Extension = v
}

// GetModifierExtension returns the ModifierExtension field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetModifierExtension() []Extension {
	if o == nil || IsNil(o.ModifierExtension) {
		var ret []Extension
		return ret
	}
	return o.ModifierExtension
}

// GetModifierExtensionOk returns a tuple with the ModifierExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetModifierExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.ModifierExtension) {
		return nil, false
	}
	return o.ModifierExtension, true
}

// HasModifierExtension returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasModifierExtension() bool {
	if o != nil && !IsNil(o.ModifierExtension) {
		return true
	}

	return false
}

// SetModifierExtension gets a reference to the given []Extension and assigns it to the ModifierExtension field.
func (o *ExampleScenarioInstance) SetModifierExtension(v []Extension) {
	o.ModifierExtension = v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ExampleScenarioInstance) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ExampleScenarioInstance) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExampleScenarioInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExampleScenarioInstance) SetDescription(v string) {
	o.Description = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetVersion() []ExampleScenarioVersion {
	if o == nil || IsNil(o.Version) {
		var ret []ExampleScenarioVersion
		return ret
	}
	return o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetVersionOk() ([]ExampleScenarioVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given []ExampleScenarioVersion and assigns it to the Version field.
func (o *ExampleScenarioInstance) SetVersion(v []ExampleScenarioVersion) {
	o.Version = v
}

// GetContainedInstance returns the ContainedInstance field value if set, zero value otherwise.
func (o *ExampleScenarioInstance) GetContainedInstance() []ExampleScenarioContainedInstance {
	if o == nil || IsNil(o.ContainedInstance) {
		var ret []ExampleScenarioContainedInstance
		return ret
	}
	return o.ContainedInstance
}

// GetContainedInstanceOk returns a tuple with the ContainedInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleScenarioInstance) GetContainedInstanceOk() ([]ExampleScenarioContainedInstance, bool) {
	if o == nil || IsNil(o.ContainedInstance) {
		return nil, false
	}
	return o.ContainedInstance, true
}

// HasContainedInstance returns a boolean if a field has been set.
func (o *ExampleScenarioInstance) HasContainedInstance() bool {
	if o != nil && !IsNil(o.ContainedInstance) {
		return true
	}

	return false
}

// SetContainedInstance gets a reference to the given []ExampleScenarioContainedInstance and assigns it to the ContainedInstance field.
func (o *ExampleScenarioInstance) SetContainedInstance(v []ExampleScenarioContainedInstance) {
	o.ContainedInstance = v
}

func (o ExampleScenarioInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleScenarioInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.ModifierExtension) {
		toSerialize["modifierExtension"] = o.ModifierExtension
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.ContainedInstance) {
		toSerialize["containedInstance"] = o.ContainedInstance
	}
	return toSerialize, nil
}

type NullableExampleScenarioInstance struct {
	value *ExampleScenarioInstance
	isSet bool
}

func (v NullableExampleScenarioInstance) Get() *ExampleScenarioInstance {
	return v.value
}

func (v *NullableExampleScenarioInstance) Set(val *ExampleScenarioInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleScenarioInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleScenarioInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleScenarioInstance(val *ExampleScenarioInstance) *NullableExampleScenarioInstance {
	return &NullableExampleScenarioInstance{value: val, isSet: true}
}

func (v NullableExampleScenarioInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleScenarioInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


