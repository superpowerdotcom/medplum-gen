/*
Medplum - OpenAPI 3.0

Medplum OpenAPI 3.0 specification.  Learn more about Medplum at [https://www.medplum.com](https://www.medplum.com).

API version: 1.0.5
Contact: hello@medplum.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package medplum

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ImplementationGuideResource1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImplementationGuideResource1{}

// ImplementationGuideResource1 A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
type ImplementationGuideResource1 struct {
	// A sequence of Unicode characters
	Id *string `json:"id,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
	Extension []Extension `json:"extension,omitempty"`
	// May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
	ModifierExtension []Extension `json:"modifierExtension,omitempty"`
	// Where this resource is found.
	Reference Reference `json:"reference"`
	// If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.
	ExampleBoolean *bool `json:"exampleBoolean,omitempty"`
	// If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.
	ExampleCanonical *string `json:"exampleCanonical,omitempty"`
	// A URI that is a literal reference
	RelativePath *string `json:"relativePath,omitempty"`
}

type _ImplementationGuideResource1 ImplementationGuideResource1

// NewImplementationGuideResource1 instantiates a new ImplementationGuideResource1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImplementationGuideResource1(reference Reference) *ImplementationGuideResource1 {
	this := ImplementationGuideResource1{}
	this.Reference = reference
	return &this
}

// NewImplementationGuideResource1WithDefaults instantiates a new ImplementationGuideResource1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImplementationGuideResource1WithDefaults() *ImplementationGuideResource1 {
	this := ImplementationGuideResource1{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImplementationGuideResource1) SetId(v string) {
	o.Id = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetExtension() []Extension {
	if o == nil || IsNil(o.Extension) {
		var ret []Extension
		return ret
	}
	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given []Extension and assigns it to the Extension field.
func (o *ImplementationGuideResource1) SetExtension(v []Extension) {
	o.Extension = v
}

// GetModifierExtension returns the ModifierExtension field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetModifierExtension() []Extension {
	if o == nil || IsNil(o.ModifierExtension) {
		var ret []Extension
		return ret
	}
	return o.ModifierExtension
}

// GetModifierExtensionOk returns a tuple with the ModifierExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetModifierExtensionOk() ([]Extension, bool) {
	if o == nil || IsNil(o.ModifierExtension) {
		return nil, false
	}
	return o.ModifierExtension, true
}

// HasModifierExtension returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasModifierExtension() bool {
	if o != nil && !IsNil(o.ModifierExtension) {
		return true
	}

	return false
}

// SetModifierExtension gets a reference to the given []Extension and assigns it to the ModifierExtension field.
func (o *ImplementationGuideResource1) SetModifierExtension(v []Extension) {
	o.ModifierExtension = v
}

// GetReference returns the Reference field value
func (o *ImplementationGuideResource1) GetReference() Reference {
	if o == nil {
		var ret Reference
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetReferenceOk() (*Reference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *ImplementationGuideResource1) SetReference(v Reference) {
	o.Reference = v
}

// GetExampleBoolean returns the ExampleBoolean field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetExampleBoolean() bool {
	if o == nil || IsNil(o.ExampleBoolean) {
		var ret bool
		return ret
	}
	return *o.ExampleBoolean
}

// GetExampleBooleanOk returns a tuple with the ExampleBoolean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetExampleBooleanOk() (*bool, bool) {
	if o == nil || IsNil(o.ExampleBoolean) {
		return nil, false
	}
	return o.ExampleBoolean, true
}

// HasExampleBoolean returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasExampleBoolean() bool {
	if o != nil && !IsNil(o.ExampleBoolean) {
		return true
	}

	return false
}

// SetExampleBoolean gets a reference to the given bool and assigns it to the ExampleBoolean field.
func (o *ImplementationGuideResource1) SetExampleBoolean(v bool) {
	o.ExampleBoolean = &v
}

// GetExampleCanonical returns the ExampleCanonical field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetExampleCanonical() string {
	if o == nil || IsNil(o.ExampleCanonical) {
		var ret string
		return ret
	}
	return *o.ExampleCanonical
}

// GetExampleCanonicalOk returns a tuple with the ExampleCanonical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetExampleCanonicalOk() (*string, bool) {
	if o == nil || IsNil(o.ExampleCanonical) {
		return nil, false
	}
	return o.ExampleCanonical, true
}

// HasExampleCanonical returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasExampleCanonical() bool {
	if o != nil && !IsNil(o.ExampleCanonical) {
		return true
	}

	return false
}

// SetExampleCanonical gets a reference to the given string and assigns it to the ExampleCanonical field.
func (o *ImplementationGuideResource1) SetExampleCanonical(v string) {
	o.ExampleCanonical = &v
}

// GetRelativePath returns the RelativePath field value if set, zero value otherwise.
func (o *ImplementationGuideResource1) GetRelativePath() string {
	if o == nil || IsNil(o.RelativePath) {
		var ret string
		return ret
	}
	return *o.RelativePath
}

// GetRelativePathOk returns a tuple with the RelativePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationGuideResource1) GetRelativePathOk() (*string, bool) {
	if o == nil || IsNil(o.RelativePath) {
		return nil, false
	}
	return o.RelativePath, true
}

// HasRelativePath returns a boolean if a field has been set.
func (o *ImplementationGuideResource1) HasRelativePath() bool {
	if o != nil && !IsNil(o.RelativePath) {
		return true
	}

	return false
}

// SetRelativePath gets a reference to the given string and assigns it to the RelativePath field.
func (o *ImplementationGuideResource1) SetRelativePath(v string) {
	o.RelativePath = &v
}

func (o ImplementationGuideResource1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImplementationGuideResource1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.ModifierExtension) {
		toSerialize["modifierExtension"] = o.ModifierExtension
	}
	toSerialize["reference"] = o.Reference
	if !IsNil(o.ExampleBoolean) {
		toSerialize["exampleBoolean"] = o.ExampleBoolean
	}
	if !IsNil(o.ExampleCanonical) {
		toSerialize["exampleCanonical"] = o.ExampleCanonical
	}
	if !IsNil(o.RelativePath) {
		toSerialize["relativePath"] = o.RelativePath
	}
	return toSerialize, nil
}

func (o *ImplementationGuideResource1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reference",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImplementationGuideResource1 := _ImplementationGuideResource1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImplementationGuideResource1)

	if err != nil {
		return err
	}

	*o = ImplementationGuideResource1(varImplementationGuideResource1)

	return err
}

type NullableImplementationGuideResource1 struct {
	value *ImplementationGuideResource1
	isSet bool
}

func (v NullableImplementationGuideResource1) Get() *ImplementationGuideResource1 {
	return v.value
}

func (v *NullableImplementationGuideResource1) Set(val *ImplementationGuideResource1) {
	v.value = val
	v.isSet = true
}

func (v NullableImplementationGuideResource1) IsSet() bool {
	return v.isSet
}

func (v *NullableImplementationGuideResource1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImplementationGuideResource1(val *ImplementationGuideResource1) *NullableImplementationGuideResource1 {
	return &NullableImplementationGuideResource1{value: val, isSet: true}
}

func (v NullableImplementationGuideResource1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImplementationGuideResource1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


