/*
Medplum - OpenAPI 3.0

Medplum OpenAPI 3.0 specification.  Learn more about Medplum at [https://www.medplum.com](https://www.medplum.com).

API version: 1.0.5
Contact: hello@medplum.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package medplum

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentChannel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentChannel{}

// AgentChannel Details where to send notifications when resources are received that meet the criteria.
type AgentChannel struct {
	// The channel endpoint definition including protocol and network binding details.
	Endpoint Reference `json:"endpoint"`
	// The target resource where channel messages will be delivered.
	TargetReference *Reference `json:"targetReference,omitempty"`
	// A URI that is a literal reference
	TargetUrl *string `json:"targetUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentChannel AgentChannel

// NewAgentChannel instantiates a new AgentChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentChannel(endpoint Reference) *AgentChannel {
	this := AgentChannel{}
	this.Endpoint = endpoint
	return &this
}

// NewAgentChannelWithDefaults instantiates a new AgentChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentChannelWithDefaults() *AgentChannel {
	this := AgentChannel{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *AgentChannel) GetEndpoint() Reference {
	if o == nil {
		var ret Reference
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *AgentChannel) GetEndpointOk() (*Reference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *AgentChannel) SetEndpoint(v Reference) {
	o.Endpoint = v
}

// GetTargetReference returns the TargetReference field value if set, zero value otherwise.
func (o *AgentChannel) GetTargetReference() Reference {
	if o == nil || IsNil(o.TargetReference) {
		var ret Reference
		return ret
	}
	return *o.TargetReference
}

// GetTargetReferenceOk returns a tuple with the TargetReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentChannel) GetTargetReferenceOk() (*Reference, bool) {
	if o == nil || IsNil(o.TargetReference) {
		return nil, false
	}
	return o.TargetReference, true
}

// HasTargetReference returns a boolean if a field has been set.
func (o *AgentChannel) HasTargetReference() bool {
	if o != nil && !IsNil(o.TargetReference) {
		return true
	}

	return false
}

// SetTargetReference gets a reference to the given Reference and assigns it to the TargetReference field.
func (o *AgentChannel) SetTargetReference(v Reference) {
	o.TargetReference = &v
}

// GetTargetUrl returns the TargetUrl field value if set, zero value otherwise.
func (o *AgentChannel) GetTargetUrl() string {
	if o == nil || IsNil(o.TargetUrl) {
		var ret string
		return ret
	}
	return *o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentChannel) GetTargetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TargetUrl) {
		return nil, false
	}
	return o.TargetUrl, true
}

// HasTargetUrl returns a boolean if a field has been set.
func (o *AgentChannel) HasTargetUrl() bool {
	if o != nil && !IsNil(o.TargetUrl) {
		return true
	}

	return false
}

// SetTargetUrl gets a reference to the given string and assigns it to the TargetUrl field.
func (o *AgentChannel) SetTargetUrl(v string) {
	o.TargetUrl = &v
}

func (o AgentChannel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentChannel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.TargetReference) {
		toSerialize["targetReference"] = o.TargetReference
	}
	if !IsNil(o.TargetUrl) {
		toSerialize["targetUrl"] = o.TargetUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentChannel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentChannel := _AgentChannel{}

	err = json.Unmarshal(data, &varAgentChannel)

	if err != nil {
		return err
	}

	*o = AgentChannel(varAgentChannel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endpoint")
		delete(additionalProperties, "targetReference")
		delete(additionalProperties, "targetUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentChannel struct {
	value *AgentChannel
	isSet bool
}

func (v NullableAgentChannel) Get() *AgentChannel {
	return v.value
}

func (v *NullableAgentChannel) Set(val *AgentChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentChannel(val *AgentChannel) *NullableAgentChannel {
	return &NullableAgentChannel{value: val, isSet: true}
}

func (v NullableAgentChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


